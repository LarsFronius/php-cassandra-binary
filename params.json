{"name":"PHP library for Cassandra","tagline":"PHP library for Cassandra database via a binary protocol.","body":"PHP library for Cassandra\r\n====================\r\n\r\nCassandra client library for PHP, using the native binary protocol.\r\n\r\n## Installation\r\n\r\nPHP 5.4+ is required. There is no need for additional libraries.\r\n\r\nAdd repository to composer.json\r\n\r\n```\r\n\t...\r\n\t\"repositories\": [\r\n\t\t{\r\n\t\t\t\"type\": \"vcs\",\r\n\t\t\t\"url\": \"https://github.com/evseevnn/php-cassandra-binary\"\r\n\t\t}\r\n\t],\r\n\t...\r\n```\r\n\r\nAppend dependency\r\n\r\n```\r\n\t...\r\n\t\"require\": {\r\n\t\t...\r\n\t\t\"evseevnn/php-cassandra-binary\": \"dev-master\"\r\n\t}\r\n\t...\r\n```\r\n\r\n## Base Using\r\n\r\n```php\r\n<?php\r\n\r\n$nodes = [\r\n\t'127.0.0.1',\r\n\t'192.168.0.2:8882' => [\r\n\t\t'username' => 'admin',\r\n\t\t'password' => 'pass'\r\n\t]\r\n];\r\n\r\n// Connect to database.\r\n$database = new Cassandra\\Database($nodes, 'my_keyspace');\r\n$database->connect();\r\n\r\n// Run query.\r\n$users = $database->query('SELECT * FROM \"users\" WHERE \"id\" = :id', ['id' => 'c5420d81-499e-4c9c-ac0c-fa6ba3ebc2bc']);\r\n\r\nvar_dump($users);\r\n/*\r\n\tresult:\r\n\t\tarray(\r\n\t\t\t[0] => array(\r\n\t\t\t\t'id' => 'c5420d81-499e-4c9c-ac0c-fa6ba3ebc2bc',\r\n\t\t\t\t'name' => 'userName',\r\n\t\t\t\t'email' => 'user@email.com'\r\n\t\t\t)\r\n\t\t)\r\n*/\r\n\r\n```\r\n\r\n## Using transaction\r\n\r\n```php\r\n\t$database->beginBatch();\r\n\t// all INSERT, UPDATE, DELETE query append into batch query stack for execution after applyBatch\r\n\t$uuid = $database->query('SELECT uuid() as \"uuid\" FROM system.schema_keyspaces LIMIT 1;')[0]['uuid'];\r\n\t$database->query(\r\n\t\t\t'INSERT INTO \"users\" (\"id\", \"name\", \"email\") VALUES (:id, :name, :email);',\r\n\t\t\t[\r\n\t\t\t\t'id' => $uuid,\r\n\t\t\t\t'name' => 'Mark',\r\n\t\t\t\t'email' => 'mark@facebook.com'\r\n\t\t\t]\r\n\t\t);\r\n\r\n\t$database->query(\r\n\t\t\t'DELETE FROM \"users\" WHERE \"email\" = :email;',\r\n\t\t\t[\r\n\t\t\t\t'email' => 'durov@vk.com'\r\n\t\t\t]\r\n\t\t);\r\n\t$result = $database->applyBatch();\r\n```\r\n\r\n## Supported datatypes\r\n\r\nAll types are supported.\r\n\r\n* *ascii, varchar, text*\r\n  Result will be a string.\r\n* *bigint, counter, varint*\r\n  Converted to strings using bcmath.\r\n* *blob*\r\n  Result will be a string.\r\n* *boolean*\r\n  Result will be a boolean as well.\r\n* *decimal*\r\n  Converted to strings using bcmath.\r\n* *double, float, int*\r\n  Result is using native PHP datatypes.\r\n* *timestamp*\r\n  Converted to integer. Milliseconds precision is lost.\r\n* *uuid, timeuuid, inet*\r\n  No native PHP datatype available. Converted to strings.\r\n* *list, set*\r\n  Converted to array (numeric keys).\r\n* *map*\r\n  Converted to keyed array.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}